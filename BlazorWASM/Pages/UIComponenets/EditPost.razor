@page "/EditPost/{id:int}"
@attribute [Authorize]
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using global::Shared.Models
@using global::Shared.DTOs
@inject IPostService todoService
@inject IUserService userService
@inject NavigationManager navMgr
<h3>EditPost</h3>

<div class="card1">
    @if (users == null)
    {
        <label>Loading users...</label>
    }
    else if (!users.Any())
    {
        <label>No users, you cannot create a Post</label>
    }
    else if (dto == null)
    {
        <label>Loading post data..</label>
    }
    else
    {
        <div class="form-group field">
            <label>Title:</label>
            <textarea  type="text" rows="1" cols="50" @bind="dto.Title"/>
        </div>
        <div class="form-group field">
                <label>Text:</label>
            <textarea rows="4" cols="50" @bind="dto.Body"/>
            </div>
        <div class="button-row">
            <button @onclick="UpdateAsync" class="acceptbtn">Update</button>
        </div>
    }
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private PostUpdateDto dto = null!;
    private string msg = "";
    private IEnumerable<User>? users;
    
    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            users = await userService.GetUsers();
            PostBasicDto todoData = await todoService.GetByIdAsync(Id);
            User currentlyAssigned = users.First(user => user.UserName.Equals(todoData.OwnerName));

            dto = new(Id)
            {
                Title = todoData.Title,
                OwnerId = currentlyAssigned.Id,
                    Body=todoData.Body
            };
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private async Task UpdateAsync()
    {
        try
        {
            await todoService.UpdateAsync(dto);
            navMgr.NavigateTo("/ViewPosts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
}
